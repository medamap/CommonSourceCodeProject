cmake_minimum_required(VERSION 3.22.1)
project("cscp")

set (CSP_SRC_DIR ../../../../../src)
set (CSP_VM_SRC_DIR ../../../../../src/vm)
set (ANDROID_SRC_DIR ./UnityAndroid)

set(${CMAKE_C_FLAGS}, "${CMAKE_C_FLAGS}")

add_library(${CMAKE_PROJECT_NAME} SHARED
        # List C/C++ source files with relative paths to this CMakeLists.txt.
        native-lib.cpp)

if(_BMJR)
    include(_BMJR.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_BMJR -D_UnityAndroid -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_BUBCOM80)
    include(_BUBCOM80.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_BUBCOM80 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_BX1)
    include(_BX1.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_BX1 -D_UnityAndroid -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_CEFUCOM21)
    include(_CEFUCOM21.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_CEFUCOM21 -D_UnityAndroid -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_COLECOVISION)
    include(_COLECOVISION.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_COLECOVISION -D_UnityAndroid -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FAMILYBASIC)
    include(_FAMILYBASIC.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FAMILYBASIC -D_UnityAndroid -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FM7)
    include(_FM7.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FM7 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FM8)
    include(_FM8.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FM8 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FM16BETA_I186)
    include(_FM16BETA_I186.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FM16BETA -DHAS_I186 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FM16BETA_I286)
    include(_FM16BETA_I286.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FM16BETA -DHAS_I286 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FM77)
    include(_FM77.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FM77 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FM77AV)
    include(_FM77AV.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FM77AV -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FM77AV40)
    include(_FM77AV40.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FM77AV40 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FM77AV40EX)
    include(_FM77AV40EX.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FM77AV40EX -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FM77L4)
    include(_FM77L4.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FM77L4 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FMR30_I186)
    include(_FMR30_I186.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FMR30 -DHAS_I86 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FMR30_I286)
    include(_FMR30_I286.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FMR30 -DHAS_I286 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FMR50_I286)
    include(_FMR50_I286.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FMR50 -DHAS_I286 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FMR50_I386)
    include(_FMR50_I386.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FMR50 -DHAS_I386 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FMR50_I486)
    include(_FMR50_I486.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FMR50 -DHAS_I486 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FMR60)
    include(_FMR60.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FMR60 -DHAS_I286 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FMR70)
    include(_FMR70.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FMR60 -DHAS_I386 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FMR80)
    include(_FMR80.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FMR60 -DHAS_I486 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FP200)
    include(_FP200.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FP200 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FP1100)
    include(_FP1100.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FP1100 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FSA1)
    include(_FSA1.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FSA1 -D_MSX_VDP_MESS -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_FX9000P)
    include(_FX9000P.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_FX9000P -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_GAMEGEAR)
    include(_GAMEGEAR.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_GAMEGEAR -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_HC20)
    include(_HC20.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_HC20 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_HC40)
    include(_HC40.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_HC40 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_HC80)
    include(_HC80.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_HC80 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_HX20)
    include(_HX20.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_HX20 -D_MSX_VDP_MESS -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_J3100GT)
    include(_J3100GT.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_J3100GT -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_J3100SL)
    include(_J3100SL.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_J3100SL -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_JR100)
    include(_JR100.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_JR100 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_JR800)
    include(_JR800.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_JR800 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_JX)
    include(_JX.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_JX -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_M5)
    include(_M5.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_M5 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_M23)
    include(_M23.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_M23 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_M68)
    include(_M68.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_M68 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MAP1010)
    include(_MAP1010.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MAP1010 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MASTERSYSTEM)
    include(_MASTERSYSTEM.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MASTERSYSTEM -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MSX1)
    include(_MSX1.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MSX1 -D_MSX_VDP_MESS -D_UnityAndroid -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MSX2)
    include(_MSX2.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MSX2 -D_MSX_VDP_MESS -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MSX2P)
    include(_MSX2P.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MSX2P -D_MSX_VDP_MESS -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MULTI8)
    include(_MULTI8.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MULTI8 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MYCOMZ80A)
    include(_MYCOMZ80A.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MYCOMZ80A -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ80A)
    include(_MZ80A.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ80A -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ80B)
    include(_MZ80B.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ80B -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ80K)
    include(_MZ80K.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ80K -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ700)
    include(_MZ700.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ700 -D_UnityAndroid -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ800)
    include(_MZ800.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ800 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ1500)
    include(_MZ1500.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ1500 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ2200)
    include(_MZ2200.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ2200 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ2500)
    include(_MZ2500.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ2500 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ2800)
    include(_MZ2800.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ2800 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ3500)
    include(_MZ3500.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ3500 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ5500)
    include(_MZ5500.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ5500 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ6500)
    include(_MZ6500.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ6500 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_MZ6550)
    include(_MZ6550.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_MZ6550 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_N5200)
    include(_N5200.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_N5200 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PASOPIA)
    include(_PASOPIA.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PASOPIA -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PASOPIA7)
    include(_PASOPIA7.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PASOPIA7 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC98DO)
    include(_PC98DO.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC98DO -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC98HA)
    include(_PC98HA.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC98HA -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC98LT)
    include(_PC98LT.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC98LT -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC98RL)
    include(_PC98RL.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC98RL -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC98XA)
    include(_PC98XA.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC98XA -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC98XL)
    include(_PC98XL.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC98XL -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC100)
    include(_PC100.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC100 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC2001)
    include(_PC2001.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC2001 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC6001)
    include(_PC6001.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC6001 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC6001MK2)
    include(_PC6001MK2.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC6001MK2 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC6001MK2SR)
    include(_PC6001MK2SR.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC6001MK2SR -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC6601)
    include(_PC6601.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC6601 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC6601SR)
    include(_PC6601SR.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC6601SR -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC8001)
    include(_PC8001.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC8001 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC8001MK2)
    include(_PC8001MK2.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC8001MK2 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC8001SR)
    include(_PC8001SR.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC8001SR -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC8201)
    include(_PC8201.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC8201 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC8801)
    include(_PC8801.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC8801 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC8801MA)
    include(_PC8801MA.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC8801MA -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC8801MK2)
    include(_PC8801MK2.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC8801MK2 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC9801)
    include(_PC9801.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC9801 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC9801E)
    include(_PC9801E.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC9801E -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC9801RA)
    include(_PC9801RA.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC9801RA -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC9801U)
    include(_PC9801U.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC9801U -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC9801VF)
    include(_PC9801VF.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC9801VF -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC9801VM)
    include(_PC9801VM.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC9801VM -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PC9801VX)
    include(_PC9801VX.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PC9801VX -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PCENGINE)
    include(_PCENGINE.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PCENGINE -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PHC20)
    include(_PHC20.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PHC20 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PHC25)
    include(_PHC25.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PHC25 -D_UnityAndroid -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PV1000)
    include(_PV1000.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PV1000 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PV2000)
    include(_PV2000.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PV2000 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PX7)
    include(_PX7.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PX7 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_PYUTA)
    include(_PYUTA.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_PYUTA -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_QC10)
    include(_QC10.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_QC10 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_RX78)
    include(_RX78.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_RX78 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_SC3000)
    include(_SC3000.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_SC3000 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_SCV)
    include(_SCV.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_SCV -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_SMB80TE)
    include(_SMB80TE.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_SMB80TE -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -Wno-narrowing  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_SMC70)
    include(_SMC70.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_SMC70 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_SMC777)
    include(_SMC777.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_SMC777 -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_TK85)
    include(_TK85.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_TK85 -D_UnityAndroid -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_TVBOY)
    include(_TVBOY.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_TVBOY -D_UnityAndroid -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_X1)
    include(_X1.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_X1 -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30 -DUSE_TV_CONTROL")
elseif(_X1TURBO)
    include(_X1TURBO.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_X1TURBO -D_UnityAndroid -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30 -DUSE_TV_CONTROL")
elseif(_X1TURBOZ)
    include(_X1TURBOZ.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_X1TURBOZ -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30 -DUSE_TV_CONTROL")
elseif(_X1TWIN)
    include(_X1TWIN.txt)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++17 -Wall -D_X1TWIN -D_UnityAndroid -D_HAS_TENKEY -D_RGB565  -D_EXTEND_MENU -D_USE_OPENGL_ES30 -DUSE_TV_CONTROL")
endif()

find_library(log-lib log)

target_include_directories(native-activity PRIVATE
        ${CSP_SRC_DIR}
        ${CSP_VM_SRC_DIR}
        ${ANDROID_SRC_DIR}
)

target_link_libraries(${CMAKE_PROJECT_NAME}
        # List libraries link to the target library
        android
        #native_app_glue
        log
        ${log-lib}
)

set(CMAKE_SHARED_LINKER_FLAGS
        "${CMAKE_SHARED_LINKER_FLAGS} -u ANativeActivity_onCreate")
